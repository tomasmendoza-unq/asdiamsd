import managers.posiciones.*
import managers.levelManager.*
import managers.heladoManager.*
import escenarios.pantallas.pantallaInicial.*
import personajes.pacman.*
import escenarios.levels.levelPrueba.*
import escenarios.levels.level1.*
import escenarios.mapas.mapaDePrueba.*
describe "LEVEL MANAGER"{

    method initialize(){

        game.addVisual(mainScreen)
        levelManager.levelActual(levelPrueba)
        levelPrueba.mapa(mapaPrueba)
        mainScreen.pressEnter()
    }
    test "No hay mas helados en el level de prueba"{
        heladoManager.removerHelados()
        assert.notThat(levelManager.hayHelado())
    }

    test "pacman come el ultimo helado en el mapa de prueba"{
        const heladoComun = heladoManager.heladoEn(game.at(3,1))
        const balde = heladoManager.heladoEn(game.at(13,1))
        const heladoChoco = heladoManager.heladoEn(game.at(2,2))
        pacman.cambioDireccion(derecha)
        pacman.moverse()
        heladoComun.colisionarConPacman(pacman)
        pacman.cambioDireccion(arriba)
        pacman.moverse()
        pacman.cambioDireccion(izquierda)
        heladoChoco.colisionarConPacman(pacman)
        pacman.position(game.at(13,1))
        balde.colisionarConPacman(pacman)
        assert.equals(level1, levelManager.levelActual())
    }
}